apiVersion: v1
kind: Service
metadata:
  name: highlights-bot-load-balancer
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 8000
  selector:
    app: highlights-bot-web

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: highlights-bot-web-deployment
  labels:
    app: highlights-bot-web
spec:
  selector:
    matchLabels:
      app: highlights-bot-web
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: highlights-bot-web
    spec:
      containers:
      - name: web
        image: eu.gcr.io/oceanic-throne-227920/highlights-bot:${CIRCLE_SHA1}
        command: ["/bin/bash", "-c", "gunicorn highlights.wsgi -b 0.0.0.0:8000"]
        ports:
          - containerPort: 8000
        resources:
          requests:
            cpu: 0.2
        env:
          - name: DEBUG_ENABLE
            value: "${DEBUG_ENABLE}"

          - name: BASE_URL
            value: "${BASE_URL}"

          - name: PROD_STATUS
            value: "${PROD_STATUS}"

          - name: STREAMABLE_PASSWORD
            value: "${STREAMABLE_PASSWORD}"

          - name: DATABASE_URL
            value: "${DATABASE_URL}"

          - name: LOGENTRIES_TOKEN
            value: "${LOGENTRIES_TOKEN}"

          - name: MESSENGER_ACCESS_TOKEN
            value: "${MESSENGER_ACCESS_TOKEN}"

          - name: SECRET_KEY
            value: "${SECRET_KEY}"

          - name: SENTRY_URL
            value: "${SENTRY_URL}"

          - name: DJANGO_STATIC_HOST
            value: "${DJANGO_STATIC_HOST}"

---

apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: highlights-bot-horizontal-pod-autoscaler
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: highlights-bot-web-deployment
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70

---

# Datadog monitoring

apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: datadog-agent
spec:
  template:
    metadata:
      labels:
        app: datadog-agent
      name: datadog-agent
    spec:
      containers:
      - image: datadog/agent:latest
        imagePullPolicy: Always
        name: datadog-agent
        ports:
          - containerPort: 8125
            name: dogstatsdport
            protocol: UDP
          - containerPort: 8126
            name: traceport
            protocol: TCP
        env:
          - name: DD_API_KEY
            value: "a92b448f1df6ee51d6bb758c9c2384a8"
          - name: DD_COLLECT_KUBERNETES_EVENTS
            value: "true"
          - name: DD_LEADER_ELECTION
            value: "true"
          - name: KUBERNETES
            value: "yes"
          - name: DD_KUBERNETES_KUBELET_HOST
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: DD_LOGS_ENABLED
            value: "true"
          - name: DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL
            value: "true"
          - name: DD_AC_EXCLUDE
            value: "name:datadog-agent"
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        volumeMounts:
          - name: dockersocket
            mountPath: /var/run/docker.sock
          - name: procdir
            mountPath: /host/proc
            readOnly: true
          - name: cgroups
            mountPath: /host/sys/fs/cgroup
            readOnly: true
          - name: pointerdir
            mountPath: /var/run/logs
        livenessProbe:
          exec:
            command:
            - ./probe.sh
          initialDelaySeconds: 15
          periodSeconds: 5
      volumes:
      - hostPath:
          path: /var/run/docker.sock
        name: dockersocket
      - hostPath:
          path: /proc
        name: procdir
      - hostPath:
          path: /sys/fs/cgroup
        name: cgroups
      - hostPath:
          path: /var/run/logs
        name: pointerdir
